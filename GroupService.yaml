openapi: 3.0.0
info:
  title: Study Group API
  version: 1.0.0
  description: API for managing study groups
servers:
  - url: 'http://localhost:8080/api/v1'
    description: "DEV SERVER"
paths:
  /groups:
    get:
      summary: Get all study groups
      tags:
        - Groups
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Number of items per page
          schema:
            type: integer
        - name: name
          in: query
          schema:
            type: string
        - name: coordinateXFrom
          in: query
          schema:
            type: integer
        - name: coordinateXTo
          in: query
          schema:
            type: integer
        - name: coordinateYFrom
          in: query
          schema:
            type: integer
        - name: coordinateYTo
          in: query
          schema:
            type: integer
        - name: creationDateFrom
          in: query
          schema:
            type: string
        - name: creationDateTo
          in: query
          schema:
            type: string
        - name: studentsCount
          in: query
          schema:
            type: integer
        - name: formOfEducation
          in: query
          schema:
            type: string
            enum:
              - DISTANCE_EDUCATION
              - FULL_TIME_EDUCATION
              - EVENING_CLASSES
        - name: semesterEnum
          in: query
          schema:
            type: string
            enum:
              - THIRD
              - FIFTH
              - SIXTH
        - name: sort
          in: query
          description: Array of fields that are used for sorting. The "-" sign means sorting in descending order. If queries and deletion order are provided for one field (with and without "-"), an error response will be returned.
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - +id
                - +name
                - +creationDate
                - +coordinatesX
                - +coordinatesY
                - +studentsCount
                - +formOfEducation
                - +semesterEnum
                - -id
                - -name
                - -creationDate
                - -coordinatesX
                - -coordinatesY
                - -studentsCount
                - -formOfEducation
                - -semesterEnum
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudyGroup'
    post:
      summary: Create study group
      tags:
        - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyGroup'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyGroupRequest'
          description: OK
        400:
          description: Group data isn't correct


  /groups/{groupId}:
    get:
      summary: Get a study group by ID
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyGroup'
        404:
          description: Group ID not found
    put:
      summary: "update study group"
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyGroupRequest'
      responses:
        200:
          description: OK
        400:
          description: Group data isn't correct
        404:
          description: Group ID not found
    delete:
      summary: "delete study group"
      tags:
        - Groups
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        200:
          description: OK
        404:
          description: Group ID not found
  /groups/min-admin:
    post:
      summary: Get a study group with the minimum groupAdmin value
      tags:
        - Groups
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyGroup'
        404:
          description: There is no one group
  /groups/max-admin:
    post:
      summary: Get a study group with the maximum groupAdmin value
      tags:
        - Groups
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyGroup'
        404:
          description: There is no one group
  /groups/group-count-by-name:
    get:
      summary: Get the count of study groups by name
      tags:
        - Groups
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupCountByNameResponse'
components:
  schemas:
    StudyGroup:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
        studentsCount:
          type: integer
        formOfEducation:
          type: string
          enum:
            - DISTANCE_EDUCATION
            - FULL_TIME_EDUCATION
            - EVENING_CLASSES
        semesterEnum:
          type: string
          enum:
            - THIRD
            - FIFTH
            - SIXTH
        groupAdmin:
          $ref: '#/components/schemas/Person'
    Coordinates:
      type: object
      properties:
        x:
          type: integer
        y:
          type: integer
    Person:
      type: object
      properties:
        name:
          type: string
        birthday:
          type: string
          format: date-time
        height:
          type: number
        weight:
          type: number
        passportID:
          type: string
    GroupCountByNameResponse:
      type: object
      properties:
        groupName:
          type: string
        count:
          type: number
    StudyGroupRequest:
      type: object
      properties:
        name:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
        studentsCount:
          type: integer
        formOfEducation:
          type: string
          enum:
            - DISTANCE_EDUCATION
            - FULL_TIME_EDUCATION
            - EVENING_CLASSES
        semesterEnum:
          type: string
          enum:
            - THIRD
            - FIFTH
            - SIXTH
        groupAdmin:
          $ref: '#/components/schemas/Person'